{"0": {
    "doc": "CAMPO 001 - Número de Controle",
    "title": "CAMPO 001 - Número de Controle",
    "content": "Não contém indicadores ou códigos de subcampo. Registrar o número de controle atribuído pela instituição criadora usuária ou distribuidora do registro. ",
    "url": "/docs/0xx/001/",
    "relUrl": "/docs/0xx/001/"
  },"1": {
    "doc": "CAMPO 003 – Identificador do Número de Controle",
    "title": "CAMPO 003 – Identificador do Número de Controle",
    "content": " ",
    "url": "/docs/0xx/003/",
    "relUrl": "/docs/0xx/003/"
  },"2": {
    "doc": "CAMPO 005 - Data e Hora da Última Atualização",
    "title": "CAMPO 005 - Data e Hora da Última Atualização",
    "content": " ",
    "url": "/docs/0xx/005/",
    "relUrl": "/docs/0xx/005/"
  },"3": {
    "doc": "CAMPO 008 - Campos Fixos de Dados",
    "title": "CAMPO 008 - Campos Fixos de Dados",
    "content": "Formado por 40 posições fixas de caracteres que contém informações sobre o registro como um todo ou sobre aspectos específicos do item que está sendo catalogado. Esses dados codificados podem ser usados para propósitos de recuperação e gerenciamento de dados. Posições definidas conforme tipo de material bibliográfico. As posições 18-34 são definidas para cada tipo de material. ",
    "url": "/docs/0xx/008/",
    "relUrl": "/docs/0xx/008/"
  },"4": {
    "doc": "0XX Campos de controle",
    "title": "0XX Campos de controle",
    "content": "To make it as easy as possible to write documentation in plain Markdown, most UI components are styled using default Markdown elements with few additional CSS classes needed. ",
    "url": "/docs/0xx",
    "relUrl": "/docs/0xx"
  },"5": {
    "doc": "Markdown kitchen sink",
    "title": "Header 1",
    "content": "This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere. ",
    "url": "/docs/index-test/#header-1",
    "relUrl": "/docs/index-test/#header-1"
  },"6": {
    "doc": "Markdown kitchen sink",
    "title": "Header 2",
    "content": "This is a blockquote following a header. When something is important enough, you do it even if the odds are not in your favor. Header 3 . // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require('./lang/' + l) return true; } . # Ruby code with syntax highlighting GitHubPages::Dependencies.gems.each do |gem, version| s.add_dependency(gem, \"= #{version}\") end . Header 4 with code not transformed . | This is an unordered list following a header. | This is an unordered list following a header. | This is an unordered list following a header. | . Header 5 . | This is an ordered list following a header. | This is an ordered list following a header. | This is an ordered list following a header. | . Header 6 . This is a very long link which wraps and therefore doesn’t overflow even when it comes at the beginning of the line. | This is a very long link which wraps and therefore doesn’t overflow the line when used first in an item in a list. | . | head1 | head two | three | . | ok | good swedish fish | nice | . | out of stock | good and plenty | nice | . | ok | good oreos | hmm | . | ok | good zoute drop | yumm | . There’s a horizontal rule below this. Here is an unordered list: . | Item foo | Item bar | Item baz | Item zip | . And an ordered list: . | Item one | Item two | Item three | Item four | . And an ordered list, continued: . | Item one | Item two | . Some text . | Item three | Item four | . And an ordered list starting from 42: . | Item 42 | Item 43 | Item 44 | . And a nested list: . | level 1 item . | level 2 item | level 2 item . | level 3 item | level 3 item | . | . | level 1 item . | level 2 item | level 2 item | level 2 item | . | level 1 item . | level 2 item | level 2 item | . | level 1 item | . Nesting an ol in ul in an ol . | level 1 item (ul) . | level 2 item (ol) | level 2 item (ol) . | level 3 item (ul) | level 3 item (ul) | . | . | level 1 item (ul) . | level 2 item (ol) | level 2 item (ol) . | level 3 item (ul) | level 3 item (ul) | . | level 4 item (ol) | level 4 item (ol) . | level 3 item (ul) | level 3 item (ul) | . | . | level 1 item (ul) | . And a task list . | Hello, this is a TODO item | Hello, this is another TODO item | Goodbye, this item is done | . Nesting task lists . | level 1 item (task) . | level 2 item (task) | level 2 item (task) | . | level 1 item (task) | level 1 item (task) | . Nesting a ul in a task list . | level 1 item (task) . | level 2 item (ul) | level 2 item (ul) | . | level 1 item (task) | level 1 item (task) | . Nesting a task list in a ul . | level 1 item (ul) . | level 2 item (task) | level 2 item (task) | . | level 1 item (ul) | level 1 item (ul) | . Small image . Large image . “Wroclaw University Library digitizing rare archival texts” by j_cadmus is marked with CC BY 2.0. Labels . I’m a label . blue . green . purple . yellow . red . bold . italic . bold + italic . Definition lists can be used with HTML syntax. Name Godzilla Born 1952 Birthplace Japan Color Green Multiple description terms and values . Term Brief description of Term Longer Term Longer description of Term, possibly more than one line Term First description of Term, possibly more than one line Second description of Term, possibly more than one line . Term1 Term2 Single description of Term1 and Term2, possibly more than one line Term1 Term2 First description of Term1 and Term2, possibly more than one line Second description of Term1 and Term2, possibly more than one line . More code . def dump_args(func): \"This decorator dumps out the arguments passed to a function before calling it\" argnames = func.func_code.co_varnames[:func.func_code.co_argcount] fname = func.func_name def echo_func(*args,**kwargs): print fname, \":\", ', '.join( '%s=%r' % entry for entry in zip(argnames,args) + kwargs.items()) return func(*args, **kwargs) return echo_func @dump_args def f1(a,b,c): print a + b + c f1(1, 2, 3) def precondition(precondition, use_conditions=DEFAULT_ON): return conditions(precondition, None, use_conditions) def postcondition(postcondition, use_conditions=DEFAULT_ON): return conditions(None, postcondition, use_conditions) class conditions(object): __slots__ = ('__precondition', '__postcondition') def __init__(self, pre, post, use_conditions=DEFAULT_ON): if not use_conditions: pre, post = None, None self.__precondition = pre self.__postcondition = post . Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Mermaid Diagrams . The following code is displayed as a diagram only when a mermaid key supplied in _config.yml. graph TD; A--&gt;B; A--&gt;C; B--&gt;D; C--&gt;D; . The final element. ",
    "url": "/docs/index-test/#header-2",
    "relUrl": "/docs/index-test/#header-2"
  },"7": {
    "doc": "Markdown kitchen sink",
    "title": "Markdown kitchen sink",
    "content": "Preview dark color scheme . Text can be bold, italic, or strikethrough. Link to another page. There should be whitespace between paragraphs. There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project. ",
    "url": "/docs/index-test/",
    "relUrl": "/docs/index-test/"
  },"8": {
    "doc": "Apresentação",
    "title": "Apresentação",
    "content": "Com objetivo de associar o uso dos campos do MARC21 às regras de catalogação, este material foi organizado seguindo a ordem numérica dos campos do MARC21, com conceitos, observações e exemplos. Os exemplos foram extraídos do livro de Antonia Motta de Castro Memória Ribeiro. Catalogação de recursos bibliográficos: AACR2 em MARC 21. 6. ed. Brasília: Três em Um, 2015. ",
    "url": "/",
    "relUrl": "/"
  },"9": {
    "doc": "Apresentação",
    "title": "Table of contents",
    "content": ". | Apresentação . | Visão geral | Formato MARC21 | . | Conceitos básicos . | Etiquetas | . | . ",
    "url": "/#table-of-contents",
    "relUrl": "/#table-of-contents"
  },"10": {
    "doc": "Apresentação",
    "title": "Visão geral",
    "content": "O MARC (MAchine Readable Cataloging) – Registro Catalográfico Legível por Máquina foi desenvolvido na década de 60 pela Library of Congress com o propósito de: . | padronizar a representação descritiva automatizada dos registros bibliográficos | permitir a troca das informações bibliográficas entre bibliotecas | possibilitar a catalogação cooperativa | . ",
    "url": "/#vis%C3%A3o-geral",
    "relUrl": "/#visão-geral"
  },"11": {
    "doc": "Apresentação",
    "title": "Formato MARC21",
    "content": ". | 1965 – Projeto piloto – Library of Congress e mais 16 bibliotecas | 1967 – OCLC (Ohio College Library Center) – 1o. Banco de dados bibliográfico | 1983 – o LC Marc se transformou em USMARC | . No final dos anos 90 – unificação do USMARC com o CANMARC formando o MARC 21. ",
    "url": "/#formato-marc21",
    "relUrl": "/#formato-marc21"
  },"12": {
    "doc": "Apresentação",
    "title": "Conceitos básicos",
    "content": "Base de dados: Conjunto estruturado de dados armazenados em meio legível por computador, no qual o nível de padronização de dados é alto. | Registro: Conjunto de todas as informações relativas a um item de uma base de dados. | Campo: Espaço definido para cada unidade de informação de um registro. É uma área definida na qual o mesmo tipo de informação é cadastrada consistentemente. | Subcampo: Subdivisão do campo. Subcampos são as menores unidades lógicas de informação em um campo variável. Representam o nível inferior de designação de conteúdo no MARC. Códigos de subcampos (letras ou números) identificam subcampos e são precedidos por delimitadores de subcampos (/). | Indicador: Valor associado a um campo, sinalizando que o dado contido no campo necessita de algum processamento especial. Os indicadores contêm informações sobre o campo para indexação, produção de fichas, ou outras funções do sistema. Os números em posições de indicadores têm significados pré-determinados. | Campo ou subcampo repetitivos: É o campo que pode ocorrer mais de uma vez no mesmo registro, ou o subcampo que pode ocorrer mais de uma vez no mesmo campo. | Campo ou subcampo obrigatório: É o campo ou subcampo cujo preenchimento é necessário e obrigatório para consistência dos dados. | Campos fixos: Campos que possuem tamanho (ou largura) fixo. O primeiro campo no registro é o campo fixo. Etiquetas mnemônicas identificam os elementos que contêm informações codificadas descrevendo o item e o próprio registro. | Campos variáveis: Campos que possuem tamanho (ou largura) variável. O tamanho está de acordo com o dado contido no campo. | ISO 2709: Norma que define a estrutura do arquivo físico que permite o intercâmbio de informações. É um formato padrão de comunicação para registros bibliográficos, utilizado para intercâmbio de registros em meio magnético de um sistema para outro. | Z39.50: Protocolo de comunicação entre servidores de bases de dados. | . ",
    "url": "/#conceitos-b%C3%A1sicos",
    "relUrl": "/#conceitos-básicos"
  },"13": {
    "doc": "Apresentação",
    "title": "Etiquetas",
    "content": "As etiquetas identificam os campos variáveis e são agrupadas numericamente por função. XX indica um valor numérico entre 00 e 99. | 0XX = Números de controle bibliográfico e informações codificadas . | 1XX = Entrada principal . | 2XX = Área de títulos e indicação de responsabilidade; edição, imprenta . | 3XX = Área de descrição física etc . | 4XX = Área de série . | 5XX = Área de notas . | 6XX = Entradas secundárias de assunto . | 7XX = Outras entradas secundárias; campos de ligação ou relacionados . | 8XX = Entradas secundárias de série . | 9XX = Livre para cada biblioteca definir conforme suas necessidades . | . Dentro dos blocos 1XX, 4XX, 6XX, 7XX e 8XX, algumas indicações de conteúdo se repetem. Os dois caracteres finais nestes blocos possuem os seguintes significados. | X00 = Nomes pessoais . | X10 = Nomes corporativos . | X11 = Nomes de eventos . | X30 = Títulos uniformes . | X40 = Títulos bibliográficos . | X50 = Termos tópicos . | X51 = Nomes geográficos . | . ",
    "url": "/#etiquetas",
    "relUrl": "/#etiquetas"
  }
}
